
.navwrapper {
  background-color: var(--black);
  height: fit-content;
  text-align: right;
  padding-right: 2rem;
  padding-bottom: 1rem;
  text-transform: uppercase;
  /* border-bottom: 2px solid white; */
  
}

/* @media (max-width: 768px) {
  position: sticky;
  height: 8vh;
  top: 0;
  left: 0;
  right: 0;
  left: 0;
}} */

.navItem {
  text-decoration: none;
  color: var(--offwhite);
  display: inline-block;
  white-space: nowrap;
  margin: 0 1vw;
  transition: all 200ms ease-in;
  position: relative;
  font-family: var(--lato);
}

.navIcon {
  width: 5rem;
  display: inline-block;
  margin-bottom: -1rem;
}

.toggle {
  display: none;
  height: 100%;
  cursor: pointer;
  padding: 0 10vw;

  @media (max-width: 768px) {
    display: flex;
  }
}

/* @media screen and (min-width: 480px) {
  .navIcon {
display: none;
  }
} */





  /* @media .navbox(max-width: 768px) {
    flex-direction: column;
    position: fixed;
    width: 100%;
    justify-content: flex-start;
    padding-top: 10vh;
    background-color: #fff;
    transition: all 0.3s ease-in;
    top: 8vh;
    left: ${props => (props.open ? "-100%" : "0")}; */


/* .hamburger {
  transform: ${props => (props.open ? "rotate(-45deg)" : "inherit")};

  ::before,
  ::after {
    width: 30px;
    height: 3px;
    background-color: #111;
    content: "";
    position: absolute;
    transition: all 0.3s linear;
  }

.hamburger 
  ::before 
    transform: ${props =>
      props.open ? "rotate(-90deg) translate(-10px, 0px)" : "rotate(0deg)"};
    top: -10px;
  },

  ::after {
    opacity: ${props => (props.open ? "0" : "1")};
    transform: ${props => (props.open ? "rotate(90deg) " : "rotate(0deg)")};
    top: 10px;
  } */

