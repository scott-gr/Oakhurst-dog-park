.navwrapper {
  grid-row: 1;
  grid-column: 2/9;
  display: grid;
  grid-template-rows: subgrid;
  grid-template-columns: subgrid;
  background-color: var(--black);
  padding: 0;
  margin: 0;
  text-transform: uppercase; 
   /* border-bottom: 2px solid white; */
}

/* @media (max-width: 768px) {
  position: sticky;
  height: 8vh;
  top: 0;
  left: 0;
  right: 0;
  left: 0;
}} */



.navItem {
  text-decoration: none;
  color: var(--offwhite);
  margin: 0;
  transition: all 250ms ease-in;
  font-family: var(--lato);
  font-size: 2rem;
  opacity: 100%;
  justify-self: center;
}

.navItem:hover {
  transform: scale(1.2);
  color: var(--yellow);
}


@media screen and (min-width: 480px) {
  .navIcon {
    display: none;
  }
}

.toggle {
  display: none;
  height: 100%;
  cursor: pointer;
  padding: 0;
}

.burgerOpen {
  display: none;
}

@media (max-width: 480px) {
  .toggle {
    display: inline-flex;
    color: var(--offwhite);
  }
}
@media only screen and (min-width: 480px) {
.navBox {
  grid-column-start: 5;
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
}}

@media only screen and (max-width: 480px) {
  .navBox {
    background-color: var(--black);
    opacity: 95%;
    transition: all 0.2s ease-in;
    left: 0;
    z-index: 20;

  }
}

@media only screen and (max-width: 480px) {
  .navBoxOpen {
    composes: navBox;
    left: -100%;
    z-index: 20;

  }
}
/* .hamburger {
  transform: ${props => (props.open ? "rotate(-45deg)" : "inherit")};

  ::before,
  ::after {
    width: 30px;
    height: 3px;
    background-color: #111;
    content: "";
    position: absolute;
    transition: all 0.3s linear;
  }

.hamburger 
  ::before 
    transform: ${props =>
      props.open ? "rotate(-90deg) translate(-10px, 0px)" : "rotate(0deg)"};
    top: -10px;
  },

  ::after {
    opacity: ${props => (props.open ? "0" : "1")};
    transform: ${props => (props.open ? "rotate(90deg) " : "rotate(0deg)")};
    top: 10px;
  } */
